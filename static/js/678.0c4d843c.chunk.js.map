{"version":3,"file":"static/js/678.0c4d843c.chunk.js","mappings":"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","sources":["components/reusable/Timer/Timer.tsx","games/reusable/GameMenu.tsx","games/reusable/settings/SoundSettings.tsx","games/tiсTacToe/styles.ts","games/tiсTacToe/components/gameCount/GameCount.tsx","games/tiсTacToe/ts/enums.ts","games/tiсTacToe/utils/utils.ts","games/tiсTacToe/components/gameTurn/GameTurn.tsx","games/tiсTacToe/components/toolbar/Toolbar.tsx","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/material/ListItemAvatar/listItemAvatarClasses.js","../node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js","games/reusable/settings/ModeSettings.tsx","games/reusable/settings/TimerSettings.tsx","games/tiсTacToe/gameMenu/GameItems.tsx","games/tiсTacToe/components/gameresultDialog/GameresultDialog.tsx","games/tiсTacToe/gameModes/pc/pc.tsx","games/tiсTacToe/Game.tsx","games/tiсTacToe/gameModes/koop/services/koopHelper.ts","games/tiсTacToe/gameModes/pc/services/pcHelper.ts","games/tiсTacToe/gameModes/online/services/onlineHelper.ts","games/utils/fiels.ts","games/utils/types.ts","../node_modules/@mui/icons-material/CompassCalibration.js","../node_modules/@mui/icons-material/Computer.js","../node_modules/@mui/icons-material/Group.js","../node_modules/@mui/icons-material/Menu.js"],"sourcesContent":["import { TextField } from '@mui/material';\n\nfunction Timer({ onChange, ...props }) {\n  function onChangeValue(e) {\n    console.log(e);\n    const value = e.target.value;\n    let parsedValue = value.split('').reduce((value, key, idx) => {\n      if (idx > 4) {\n        value = false;\n      } else {\n        value = idx === 2 && key !== ':' ? value + ':' + key : value + key;\n      }\n      return value;\n    }, '');\n    onChange(typeof parsedValue === 'string' ? parsedValue : props.value);\n  }\n  return (\n    <TextField\n      label=\"set timer\"\n      variant=\"filled\"\n      {...props}\n      onChange={(e) => onChangeValue(e)}\n    />\n  );\n}\n\nexport default Timer;\n","import React, { useMemo } from 'react';\nimport { Box } from '@mui/system';\nimport { useState } from 'react';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport {\n  List,\n  ListItemButton,\n  ListItemText,\n  Button,\n  Typography,\n  ListItem,\n} from '@mui/material';\nimport {\n  findTreeNodeById,\n  forEachTreeNodes,\n} from '../../utils/treeWalker/treeWalker';\n\nfunction GameMenu({ menuTree }) {\n  const [optionNode, setOptionNode] = useState(menuTree.children);\n  const menuTreeWithIds = useMemo(() => {\n    let makeTreenodesIds = (node, parrentNode) => {};\n    return forEachTreeNodes(menuTree, makeTreenodesIds);\n  }, [optionNode]);\n\n  function onTreeItemPress(treeNode) {\n    if (treeNode.children) {\n      setOptionNode(treeNode.children);\n    } else if (treeNode.node.action) {\n      console.log('action');\n      treeNode.node.action();\n    }\n  }\n\n  function onNavBack() {\n    const parrentId = optionNode[0].node.id.replace(/-\\d+-\\d+$/, '');\n    const parrentNode = findTreeNodeById({\n      treeNode: menuTreeWithIds,\n      id: parrentId,\n      nodePath: 'node/id',\n    });\n    if (\n      parrentNode &&\n      parrentNode.children.length &&\n      parrentId !== optionNode[0]\n    ) {\n      setOptionNode(parrentNode.children);\n    }\n  }\n  return (\n    <Box>\n      <List\n        sx={{\n          backdropFilter: 'blur(5px)',\n          width: '100%',\n          height: '150%',\n          background: 'rgba(0, 0, 0, .5)',\n          position: 'absolute',\n          gap: \"30px\",\n          bottom: \"100px\",\n\n          color: 'white',\n          margin: 'auto auto',\n          flexDirection: 'column',\n          alignItems: 'center',\n          display: 'flex',\n          justifyContent: 'center',\n          top: 0,\n          left: 0,\n          right: 0,\n        }}\n      >\n        <Button\n          variant=\"contained\"\n          sx={{\n            zIndex: 2000,\n            position: 'fixed',\n            left: \"4%\",\n            top: '28%',\n            backgroundColor: \"#ff4655\",\n            width: \"150px\",\n            height: \"66px\"\n          }}\n          onClick={onNavBack}\n          >\n          <ArrowBackIosIcon/>\n        </Button>\n        {optionNode.map((treeNode) => (\n          treeNode.node.control ? <ListItem\n            sx={{\n              display: \"flex\",\n              flexDirection: 'column',\n              background: \"transparent\",\n              // border: \"2px solid #F8F8F8\",\n              width: \"90%\",\n              height: \"max-content\",\n              overflowY: \"hidden\",\n              overflowX: \"hidden\",\n              border: \"none\",\n              position: \"relative\",\n              \"&:after\": {\n                content: '\"\"',\n                position: 'absolute',\n                width: '1158%',\n                height: '1000%',\n                top: '20px; right: -500%',\n                background: '#F8F8F8',\n                color: \"\",\n                transformOrigin: '48.3% 0',\n                transform: 'rotate(-41deg)',\n                zIndex: -1,\n              },\n              \"&:hover\": {\n                animation: \"gameMenu 2s\",\n              }\n            }}\n            key={treeNode.node.id}\n            component=\"button\"\n            onClick={() => onTreeItemPress(treeNode)}\n          >\n            <ListItemText\n              primary={\n                <Typography variant=\"h4\">{treeNode.node.text}</Typography>\n              }\n            />\n            {treeNode.node.control}\n          </ListItem> :\n          <ListItemButton\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            flexGrow: '0',\n          }}\n          key={treeNode.node.id}\n          component=\"button\"\n          onClick={() => onTreeItemPress(treeNode)}\n        >\n          <ListItemText\n            primary={\n              <Typography variant=\"h4\">{treeNode.node.text}</Typography>\n            }\n          />\n          <Box>{treeNode.node.control}</Box>\n        </ListItemButton>\n        ))}\n      </List>\n    </Box>\n  );\n}\n\nexport default GameMenu;\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Slider from '@mui/material/Slider';\n// import VolumeDown from '@mui/icons-material/VolumeDown';\n// import VolumeUp from '@mui/icons-material/VolumeUp';\n\nfunction SoundSettings() {\n  const [value, setValue] = React.useState<number>(30);\n\n  const handleChange = (event: Event, newValue: number | number[]) => {\n    setValue(newValue as number);\n  };\n  return (\n    <Box sx={{ width: 200 }}>\n      <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\n        {/* <VolumeDown />\n        <Slider aria-label=\"Volume\" value={value} onChange={handleChange} />\n        <VolumeUp /> */}\n      </Stack>\n      <Slider disabled defaultValue={30} aria-label=\"Disabled slider\" />\n    </Box>\n  );\n}\n\nexport default SoundSettings;\n","import reactCSS from 'reactcss'\nconst styleComponent = function (theme) {\n  return reactCSS({\n    default: {\n       icon: {\n        height: \"30px\",\n        width: \"30px\",\n        marginLeft: '10px'\n       },\n       field: {\n        height: '100%',\n        margin: 'auto auto',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n      },\n       row: {\n        display: 'flex',\n        justifyContent: 'center',\n       },\n       col: {\n        border: '2px solid black',\n        width: '150px',\n        height: '150px',\n        alignContent: 'center',\n        background: 'white',\n        display: 'flex',\n        justifyContent: 'center',\n      },\n      game_count: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'spaceBetween',\n        alignItems: 'center',\n        gap: '5px'\n      }\n    },\n  })\n}\n\nexport { styleComponent }\n","import { useTheme } from \"@emotion/react\"\nimport { Box, Typography } from \"@mui/material\"\nimport AvatarComponent from \"../../../../components/reusable/AvatarComponent/AvatarComponent\"\nimport { styleComponent } from \"../../styles\"\nimport { TGamersConfig, TIconsDict } from \"../../ts/types\"\n\ntype TControlProps = {\n  iconsDict: TIconsDict\n  countWin: TGamersConfig\n}\n\nfunction GameCount({iconsDict, countWin}: TControlProps) {\n    const {me, rival} = countWin\n    const theme = useTheme()\n    const styles = styleComponent(theme)\n    return (\n        <>\n        {/* <AvatarComponent\n        avatar={me?.data?.avatar}\n        username={me?.data?.username}\n        name={me?.data?.name}\n        surname={me?.data?.surname}\n        />   */}\n        <img\n        style={styles.icon}\n          src={iconsDict[me.key].value}\n        />\n        : <Typography variant=\"h4\">{countWin.me.countWin}</Typography>\n        <Typography variant=\"h4\">-VS-</Typography>\n        {/* <AvatarComponent\n         avatar={rival.data.avatar}\n         username={rival.data.username}\n         name={rival.data.name}\n         surname={rival.data.surname}\n        /> */}\n        <img\n          style={styles.icon}\n          src={iconsDict[rival.key].value}\n        />\n        : <Typography variant=\"h4\">{countWin.rival.countWin}</Typography>\n      </>\n    )\n}\n\nexport default GameCount","enum EGameItems {\n    X = 'X',\n    O = 'O'\n}\n\nenum EGameModes {\n    Pc = 'pc',\n    Koop = 'koop',\n    Online = 'online'\n}\n\nenum EFieldParams {\n    Col = 'col',\n    Row = 'row'\n}\n\nexport {\n    EGameItems,\n    EGameModes,\n    EFieldParams\n}","import { forEachField } from '../../utils/fiels';\nimport { EFieldParams, EGameItems } from '../ts/enums';\nimport { TCoords, TGameField } from '../ts/types';\n\nexport function oposite(oposite: EGameItems): EGameItems {\n  return oposite === EGameItems.X ? EGameItems.O : EGameItems.X;\n}\n\nexport function checkValid(\n  value: string | number,\n  type: EFieldParams\n): boolean {\n  const __data = {\n    col: ['A', 'B', 'C'],\n    row: [1, 2, 3],\n  };\n\n  return __data[type].some((e) => e === value);\n}\n\nexport function compareWin(\n  fieldState: TGameField,\n  turn: EGameItems,\n  checkWin: boolean\n) {\n  let vertical: TCoords[] = [];\n  let horisontal: TCoords[] = [];\n  const diagonalLeft: TCoords[] = [];\n  const diagonalRight: TCoords[] = [];\n  let checkHorisontal: TCoords['col'] = 'A';\n  let checkVertical: number = 0;\n  let startDiagonalLeft: number = 0;\n  let startDiagonalRight: number = 2;\n  let startDiagonalRightCol: number = 0;\n  let isDraw: boolean = true;\n  const checkCount: number = checkWin ? 3 : 2;\n  const compareField = (col, row) => {\n    const coords = {\n      col,\n      row,\n    };\n    if (\n      +row === 0 &&\n      horisontal.length !== checkCount &&\n      col !== 'A' &&\n      checkValid(\n        String.fromCharCode(checkHorisontal.charCodeAt(0) + 1),\n        EFieldParams.Col\n      )\n    ) {\n      horisontal = [];\n      checkHorisontal = String.fromCharCode(\n        checkHorisontal.charCodeAt(0) + 1\n      ) as TCoords['col'];\n    }\n\n    if (col === checkHorisontal && turn === fieldState[col][row].key) {\n      horisontal.push(coords);\n    }\n    if (+row === checkVertical && vertical.length !== checkCount) {\n      vertical = [];\n      for (let i = 0; i <= 2; i++) {\n        let charCode = 65 + i;\n        const coords: TCoords = {\n          col: String.fromCharCode(charCode) as TCoords['col'],\n          row,\n        };\n        fieldState[coords.col][coords.row].key === turn &&\n          vertical.push(coords);\n      }\n      checkVertical++;\n    }\n    if (\n      startDiagonalLeft === +row &&\n      col === String.fromCharCode(startDiagonalLeft + 65) &&\n      turn === fieldState[col][row].key\n    ) {\n      diagonalLeft.push(coords);\n      startDiagonalLeft++;\n    }\n    if (\n      startDiagonalRight === +row &&\n      col === String.fromCharCode(startDiagonalRightCol + 65) &&\n      turn === fieldState[col][row].key\n    ) {\n      diagonalRight.push(coords);\n      startDiagonalRight--;\n      startDiagonalRightCol++;\n    }\n    if (!fieldState[col][row].key) {\n      isDraw = false;\n    }\n    return fieldState[col][row];\n  };\n\n  forEachField(fieldState, compareField);\n  const compareResults = {\n    vertical,\n    horisontal,\n    diagonalLeft,\n    diagonalRight,\n  };\n  function isWin() {\n    return Object.values(compareResults)\n    .some((result) => result.length === 3);\n  }\n\n  return {\n    showResult: function () {\n      if (isWin()) {\n        return isWin();\n      } else if (isDraw) {\n        return 'draw';\n      }\n    },\n    showCoordinates: function () {\n      return compareResults;\n    },\n  };\n}\n","import { useTheme } from \"@emotion/react\";\nimport { Typography } from \"@mui/material\";\nimport { styleComponent } from \"../../styles\";\nimport { oposite } from \"../../utils/utils\";\n\nfunction GameTurn({text, isResult, turnState, iconsDict}) {\n    const theme = useTheme()\n    const styles = styleComponent(theme)\n    let reverseState;\n    if (isResult) reverseState = oposite(turnState);\n    return (\n        <Typography variant=\"h6\">\n        {text}: {''}\n        <img\n          style={styles.icon}\n          src={\n            reverseState\n              ? iconsDict[reverseState].value\n              : iconsDict[turnState].value\n          }\n          alt={\n            reverseState\n              ? iconsDict[reverseState].value\n              : iconsDict[turnState].key\n          }\n        />\n      </Typography>\n    );\n}\n\nexport default GameTurn","import { Button, Box } from \"@mui/material\"\nimport ToolbarComponent from \"../../../../components/reusable/ToolbarComponent/ToolbarComponent\"\nimport MenuIcon from '@mui/icons-material/Menu';\nimport GameCount from \"../gameCount/GameCount\";\nimport GameTurn from \"../gameTurn/GameTurn\";\nimport { styleComponent } from \"../../styles\";\nimport { useTheme } from \"@emotion/react\";\nfunction Toolbar({countWin, iconsDict, turnState, setPause}) {\n    const theme = useTheme()\n    const styles = styleComponent(theme)\n    function onOpenMenu() {\n       setPause(true)\n    }\n    return (\n        <ToolbarComponent justifyContent=\"right\" width=\"100%\">\n        <Box sx={styles.game_count}>\n        <GameCount \n        iconsDict={iconsDict}\n        countWin={countWin}\n        />\n        </Box>\n        <Box>\n        <GameTurn\n        text={\"Now turn is\"}\n        isResult={false}\n        turnState={turnState}\n        iconsDict={iconsDict}\n        />\n        </Box>\n        <Button onClick={onOpenMenu}>\n            <MenuIcon/>\n        </Button>\n      </ToolbarComponent>\n    )\n}\n\nexport default Toolbar","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemAvatar', slot);\n}\nconst listItemAvatarClasses = generateUtilityClasses('MuiListItemAvatar', ['root', 'alignItemsFlexStart']);\nexport default listItemAvatarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport ListContext from '../List/ListContext';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\nconst ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  flexShrink: 0\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemAvatar;","import React, { useEffect, useMemo, useState } from 'react';\nimport {\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemAvatar,\n  ListItemText,\n  Checkbox\n} from '@mui/material';\nfunction ModeSettings({ gameParams, setGameParams}) {\n  const selectedVariant = useMemo(() => {\n    return gameParams.gameWith.find(i => i.checked)\n  }, [])\n  const [selectedMode, setSelectedMode] = useState(selectedVariant.key)\n\n    function onChangeMode(variant) {\n      setSelectedMode(variant.key)\n    }\n\n    useEffect(() => {\n      setGameParams(param => {\n        const updateWith = param.gameWith.map(item => ({\n          ...item,\n          checked: item.key === selectedMode\n        }))\n        return {\n          ...param,\n          gameWith: updateWith\n        }\n      })\n    }, [selectedMode])\n  return (\n   <>\n    <List dense sx={{\n       width: '100%',   \n    }}>\n        {\n            gameParams.gameWith.map((variant, idx) => {\n                const Icon = variant.value\n                return (\n                    <ListItem\n                onClick={() => onChangeMode(variant)}\n                key={variant.key}\n                secondaryAction={\n                  <Checkbox\n                    edge=\"end\"\n                    checked={variant.key === selectedMode}\n                    onClick={() => onChangeMode(variant)}\n                    inputProps={{ 'aria-labelledby': idx }}\n                  />\n                }\n                disablePadding\n              >\n                <ListItemButton>\n                  <ListItemAvatar>\n                    <Icon/>\n                  </ListItemAvatar>\n                  <ListItemText id={idx} primary={variant.key} />\n                </ListItemButton>\n              </ListItem>\n                )\n            })\n        }\n    </List>\n   </>\n  );\n}\n\nexport default ModeSettings;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  ButtonGroup,\n  Switch,\n  Typography,\n  Box,\n  Input,\n} from '@mui/material';\nimport Timer from '../../../components/reusable/Timer/Timer';\nfunction TimerSettings({ gameParams, setGameParams }) {\n  const [time, setTime] = useState('00:00');\n  const [showTimer, setShowTimer] = useState(gameParams.timer.isOn);\n\n  useEffect(() => {\n    let parseMiliseconds = time.match(/(?<minutes>^\\d+):(?<seconds>\\d+)/);\n    if (\n      !(parseMiliseconds?.groups?.minutes && parseMiliseconds?.groups?.seconds)\n    ) {\n      return;\n    }\n    const calc =\n      +parseMiliseconds.groups.minutes * 60000 +\n      +parseMiliseconds.groups.seconds * 1000;\n    setGameParams((prev) => ({\n      ...prev,\n      timer: { ...prev.timer, tick: calc },\n    }));\n  }, [time]);\n\n  useEffect(() => {\n    setGameParams((prev) => ({\n      ...prev,\n      timer: { ...prev.timer, isOn: showTimer },\n    }));\n  }, [showTimer]);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <Box>\n        <Typography>Timer On:</Typography>\n        <Switch\n          onChange={() => setShowTimer((prev) => !prev)}\n          checked={showTimer}\n        />\n      </Box>\n      <Box>\n        {showTimer ? (\n          <Box>\n            <Timer value={time} onChange={(e) => setTime(e)} />\n          </Box>\n        ) : null}\n      </Box>\n    </Box>\n  );\n}\n\nexport default TimerSettings;\n","import { ERoutes } from \"../../../routes\";\nimport ModeSettings from \"../../reusable/settings/ModeSettings\";\nimport SoundSettings from \"../../reusable/settings/SoundSettings\";\nimport TimerSettings from \"../../reusable/settings/TimerSettings\";\n\nexport function GameItems({\n    navigate,\n    setStartGame,\n    gameParams,\n    setGameParams,\n    pause,\n    setPause\n}) {\n    return {\n        node: {virtual: true},\n        children: [\n            {\n                node: pause ? {\n                    text: \"Resume\",\n                    action: function () {\n                        setPause((prev) => !prev);\n                      },\n                } : {\n                    text: \"Start Game\",\n                    action: function () {\n                        setStartGame((prev) => !prev);\n                      },\n                },\n            },\n            {\n                node: {\n                    text: \"Options\"\n                },\n                children: [\n                    {\n                        node: {\n                            text: \"Mode\",\n                            control: <ModeSettings\n                            gameParams={gameParams}\n                            setGameParams={setGameParams} /> \n                            \n                        }\n                    },\n                    {\n                        node: {\n                            text: \"Timer\",\n                            control: <TimerSettings \n                            gameParams={gameParams}\n                            setGameParams={setGameParams} /> \n                        }\n                    },\n                    {\n                        node: {\n                            text: \"SountSettings\",\n                            control: <SoundSettings/> \n                        }\n                    }\n                ]\n            },\n            {\n                node: {\n                  text: 'Out',\n                  action: function () {\n                    navigate(ERoutes.Games);\n                  },\n                },\n                children: '',\n              },\n        ]\n    }\n}","import DialogControl from \"../../../../components/reusable/Dialog/DialogControl\"\nimport { Typography, Box } from \"@mui/material\"\nimport { useNavigate } from \"react-router-dom\";\nimport GameTurn from \"../gameTurn/GameTurn\";\nimport GameCount from \"../gameCount/GameCount\";\nimport { clearField } from \"../../../utils/fiels\";\nimport { oposite } from \"../../utils/utils\";\nimport { EGameItems } from \"../../ts/enums\";\nimport { TGameField, TGamersConfig, TIconsDict } from \"../../ts/types\";\nimport { ERoutes } from \"../../../../routes\";\n\ntype TControlProps = {\n  dialogOpen: boolean\n  setDialogOpen: (value: boolean) => void\n  turnState: EGameItems\n  setTurnState: (value: EGameItems) => void\n  setDraw: (value: boolean) => void\n  fild: TGameField\n  iconsDict: TIconsDict\n  draw: boolean\n  countWin: TGamersConfig\n  setFieldState: (value: TGameField) => void\n}\n\nfunction GameresultDialog({\n    dialogOpen, \n    setDialogOpen,\n    turnState,\n    setTurnState,\n    setFieldState,\n    setDraw,\n    fild,\n    iconsDict,\n    draw,\n    countWin\n}: TControlProps) {\n    const navigate = useNavigate()\n    function onStartNewGame() {\n        let reverseState = oposite(turnState);\n        setTurnState(reverseState);\n        console.log(clearField(fild))\n        setFieldState(fild);\n        setDialogOpen(false);\n        setDraw(false);\n      }\n    \n      function onOut() {\n        setFieldState(fild);\n        setDraw(false);\n        setDialogOpen(false);\n        navigate(ERoutes.Games);\n      }\n    return (\n        <DialogControl\n        dialogActions={[\n          {\n            text: 'startNewGame',\n            onClick: onStartNewGame,\n          },\n          {\n            text: 'Out',\n            onClick: onOut,\n          },\n        ]}\n        open={dialogOpen}\n        setOpen={setDialogOpen}\n        title=\"the game was over\"\n      >\n        <Box>\n          <Typography variant=\"h5\">\n            {draw\n              ? 'The match ended in a draw'\n              :   \n            <GameTurn\n            text={'At these match was win is'}\n            isResult={true}\n            turnState={turnState}\n            iconsDict={iconsDict}\n            />\n              }\n          \n          </Typography>\n          <Typography variant=\"h6\">\n            <GameCount\n            iconsDict={iconsDict}\n            countWin={countWin}\n            />\n          </Typography>\n        </Box>\n      </DialogControl>\n    )\n}\n\nexport default GameresultDialog","import { randomUnit } from '../../../../utils/utils';\nimport { forEachField, runByAllFields } from '../../../utils/fiels';\nimport { compareWin, oposite } from '../../utils/utils';\n\nclass PC {\n  side;\n  fieldState;\n  stepCount: number = 0;\n  iconsDict;\n  winCenter = false;\n  think = false;\n  warnings = [];\n  opositeSide;\n  fieldCorners\n  constructor(side, fieldState, iconsDict) {\n    this.side = side;\n    this.fieldState = fieldState;\n    this.iconsDict = iconsDict;\n    this.opositeSide = oposite(side);\n    this.fieldCorners = this.calculateCorners(fieldState)\n  }\n  calculateCorners(fieldState) {\n    let corners = []\n    const points = [\n        'A',\n        Object.keys(fieldState).reverse()[0],\n        0,\n        +Object.keys(Object.values(fieldState)[0]).reverse()[0]\n    ]\n    let checkCorner = (col, row) => {\n        const coords = {col, row}\n        const checkCorner = points.filter(point => col === point || +row === +point)\n        if (checkCorner.length === 2) {\n            corners.push(coords)\n        } \n    }\n    runByAllFields(fieldState, checkCorner)\n    console.log(corners)\n    return corners\n  }\n\n  checkFill(variants) {\n    const that = this\n    return Object.keys(variants).reduce((filterSteps, key) => {\n      if (variants[key].length === 2) {\n        const {col, row} = variants[key][0]\n        const empty = that[`check${key}`](col, row)\n        if (empty)  filterSteps[key] = {\n            ...variants[key],\n            empty: that[`check${key}`](col, row)\n        }\n      }\n      return filterSteps;\n    }, {});\n  }\n\n  checkvertical(_ ,checkRow) {\n    let empty;\n    const fieldState = this.fieldState;\n    const compareRow = (col, row) => {\n      const coords = { col, row };\n      if (!fieldState[col][row].key && +checkRow === +row) empty = coords;\n    };\n    runByAllFields(this.fieldState, compareRow);\n    return empty;\n  }\n\n  checkhorisontal(checkCol, _) {\n    let empty;\n    const fieldState = this.fieldState;\n    const compareRow = (col, row) => {\n      const coords = { col, row };\n      if (!fieldState[col][row].key && checkCol === col) empty = coords;\n    };\n    runByAllFields(this.fieldState, compareRow);\n    return empty;\n  }\n\n  checkdiagonalLeft() {\n    let checkField = 0;\n    let empty;\n    const fieldState = this.fieldState;\n    const compareRow = (col, row) => {\n      const coords = { col, row };\n      if (\n        +row === +checkField &&\n        col === String.fromCharCode(65 + checkField)\n      ) {\n        if (!fieldState[col][row].key)  empty = coords\n        checkField++\n      }\n    };\n    runByAllFields(this.fieldState, compareRow);\n    return empty\n  }\n\n  checkdiagonalRight() {\n    let checkCol = 0;\n    let checkRow = 2\n    let empty;\n    const fieldState = this.fieldState;\n    const compareRow = (col, row) => {\n      const coords = { col, row };\n      if (\n        +row === +checkRow &&\n        col === String.fromCharCode(65 + checkCol)\n      ) {\n        if (!fieldState[col][row].key)  empty = coords\n        checkRow--\n        checkCol++\n      }\n    };\n    runByAllFields(this.fieldState, compareRow);\n    return empty\n  }\n\n  avalibleSteps() {\n    const canStep = [];\n    const fieldState = this.fieldState;\n    const checkRival = compareWin(this.fieldState, oposite(this.side), false);\n    const checkPC = compareWin(this.fieldState, this.side, false);\n    const rivalSteps = checkRival.showCoordinates();\n    const pcSteps = checkPC.showCoordinates();\n    const dangers = this.checkFill(rivalSteps);\n    const opportunities = this.checkFill(pcSteps);\n\n    function checkField(col, row) {\n      const coords = { col, row };\n      if (!fieldState[col][row].key) canStep.push(coords);\n      return fieldState[col][row];\n    }\n    forEachField(this.fieldState, checkField);\n    return {\n      canStep,\n      dangers,\n      opportunities,\n    };\n  }\n\n  onFirstStep() {\n    if (this.fieldState['B']['1'].key) {\n      this.onFirstVariant();\n    } else {\n      this.fieldState['B']['1'] = this.render;\n      this.winCenter = true;\n    }\n  }\n\n  onFirstVariant() {\n    const isDefenced = this.onDefence();\n    if (isDefenced) return;\n    const diahonalVariants = [\n      { col: 'A', row: 0 },\n      { col: 'A', row: 2 },\n      { col: 'C', row: 0 },\n      { col: 'C', row: 2 },\n    ];\n    const freeVariants = diahonalVariants.filter(variant => !this.fieldState[variant.col][variant.row].key, this)\n    const randomIdx = randomUnit(0, freeVariants.length - 1);\n    const coords = freeVariants[randomIdx];\n    this.fieldState[coords.col][coords.row] = this.render;\n  }\n\n  rangeSteps(steps) {\n    const fieldCorners = this.fieldCorners\n    function checkState(key, config) {\n      switch(key) {\n        case side: config.friendly++\n        break;\n        case undefined: config.empty++\n        break;\n        default: config.rival++\n      }\n      return config\n    }\n    const fieldState = this.fieldState\n    const side = this.side\n    function rangeStep(step) {\n      const {col:stepCol, row:stepRow}  = step\n      const checkSteps = {\n        friendly: 0,\n        empty: 0,\n        rival: 0,\n        corner: 0\n      }\n      const horisontalConfig = Object.values(fieldState[stepCol]).reduce((config, step: {key: string}, idx) => {\n        \n        const {key} = step\n        let configData: {corner: number} = checkState(key, config)\n        const isCorner = fieldCorners.find(corner => corner.col === stepCol && +corner.row === idx)\n        if (isCorner) {\n          configData.corner++\n        }\n        return config\n      }, {...checkSteps})\n      let verticalConfig = {...checkSteps}\n      const vertical = (col, row) => {\n        if (row === stepRow) {\n          let {key} = fieldState[col][stepRow]\n          verticalConfig = checkState(key, verticalConfig)\n          const isCorner = fieldCorners.find(corner => corner.col === col && +corner.row === +stepRow)\n          if (isCorner) {\n            verticalConfig.corner++\n          }\n        }\n      }\n      runByAllFields(fieldState, vertical)\n    let rangeUnits = [horisontalConfig, verticalConfig].reduce((range, unit) => {\n      const priority = [{'friendly': 2}, {'empty': 1}, {'corner': 0.5}, {'rival': 0}]\n      const calculate = priority.reduce((rangeUnit, item) => {\n        return rangeUnit + rangeUnit + unit[Object.keys(item)[0]] + Object.values(item)[0]\n      }, 0)\n      return range + calculate\n    }, 0)\n\n      return rangeUnits\n    }\n    return steps.map(step => {\n      const checkRange = rangeStep(step)\n      return {\n        ...step,\n        range: checkRange\n      }\n    })\n    .sort((a, b) => b.range - a.range)[0]\n  }\n\n  onDefence() {\n    const avalibleSteps = this.avalibleSteps();\n    if (Object.keys(avalibleSteps.opportunities).length) {\n        const preventDanger = avalibleSteps.opportunities[Object.keys(avalibleSteps.opportunities)[0]]['empty']\n        this.fieldState[preventDanger.col][preventDanger.row] = this.render;\n        return true;\n    } else if (Object.keys(avalibleSteps.dangers).length) {\n      const preventDanger = avalibleSteps.dangers[Object.keys(avalibleSteps.dangers)[0]]['empty']\n      this.fieldState[preventDanger.col][preventDanger.row] = this.render;\n      return true;\n    } else if (this.stepCount > 1) {\n       const coords = this.rangeSteps(avalibleSteps.canStep)\n       if (coords)\n    this.fieldState[coords.col][coords.row] = this.render;\n    }\n  }\n\n  get render() {\n    return {\n      key: this.side,\n      value: this.iconsDict[this.side].value,\n    };\n  }\n\n  isRival(elem) {\n    return elem === this.opositeSide;\n  }\n\n  async pcThink() {\n    this.think = true;\n    const fieldState = this.fieldState;\n    const promise = new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(fieldState);\n        this.think = false;\n      }, 1000);\n    });\n    return promise;\n  }\n\n  stepTo(fieldState) {\n    this.fieldState = fieldState;\n    switch (this.stepCount) {\n      case 0:\n        this.onFirstStep();\n        break;\n      case 1:\n        this.onFirstVariant();\n        break;\n      default:\n        this.onDefence();\n    }\n    ++this.stepCount;\n    this.warnings = [];\n    return this.pcThink();\n  }\n}\n\nexport default PC;\n","import React, { useEffect, useMemo, useState, useContext } from 'react';\nimport Tic from './assets/Tic.png';\nimport Tac from './assets/Tac.png';\nimport { Box } from '@mui/material';\nimport { buildFieldByCoords, forEachField, makeField } from '../utils/fiels';\nimport Toolbar from './components/toolbar/Toolbar';\nimport { useNavigate } from 'react-router-dom';\nimport { EField } from '../utils/types';\nimport GroupIcon from '@mui/icons-material/Group';\nimport ComputerIcon from '@mui/icons-material/Computer';\nimport CompassCalibrationIcon from '@mui/icons-material/CompassCalibration';\nimport { GameItems } from './gameMenu/GameItems';\nimport GameMenu from '../reusable/GameMenu';\nimport { styleComponent } from './styles';\nimport { useTheme } from '@emotion/react';\nimport GameresultDialog from './components/gameresultDialog/GameresultDialog';\nimport { compareWin, oposite } from './utils/utils';\nimport PC from './gameModes/pc/pc';\nimport { AuthContext } from '../../components/AuthContext/AuthContext';\nimport { TGameField, TGamersConfig, TIconsDict } from './ts/types';\nimport { EGameItems } from './ts/enums';\nimport { EGameModes } from './ts/enums';\nimport { createPc, switchToPcTurn } from './gameModes/pc/services/pcHelper';\nimport { switchStepToRival } from './gameModes/online/services/onlineHelper';\nimport { switchTurnToAnotherUser } from './gameModes/koop/services/koopHelper';\n\nconst iconsDict: TIconsDict = {\n  X: { key: EGameItems.X, value: Tic },\n  O: { key: EGameItems.O, value: Tac },\n};\nfunction Game() {\n  const fild: TGameField = useMemo(() => {\n    return makeField(EField.TicTacToe);\n  }, []) as TGameField;\n  const [AuthUser] = useContext(AuthContext);\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const styles = styleComponent(theme);\n  const [dialogOpen, setDialogOpen] = useState<boolean>(false);\n  const [draw, setDraw] = useState<boolean>(false);\n  const [fieldState, setFieldState] = useState<TGameField>(fild);\n  const [turnState, setTurnState] = useState<EGameItems>(EGameItems.X);\n  const [activeMode, setActiveMode] = useState<EGameModes | null>(null);\n  const [pause, setPause] = useState<boolean>(false);\n  const [pc, setPc] = useState(null);\n  const [startGame, setStartGame] = useState<boolean>(false);\n  const [countWin, setCountWin] = useState<TGamersConfig>({\n    me: {\n      key: EGameItems.X,\n      countWin: 0,\n      data: {\n        username: AuthUser?.username,\n        avatar: AuthUser?.avatar,\n      },\n    },\n    rival: {\n      key: EGameItems.O,\n      countWin: 0,\n      data: {\n        username: '',\n        avatar: '',\n      },\n    },\n  });\n  useEffect(() => {\n      setCountWin((prev) => ({\n        ...prev,\n        me: {...prev.me, data: AuthUser}\n      }))\n  }, [AuthUser]);\n\n  const [gameParams, setGameParams] = useState({\n    gameWith: [\n      {\n        key: EGameModes.Pc,\n        value: ComputerIcon,\n        checked: true,\n      },\n      {\n        key: EGameModes.Koop,\n        value: GroupIcon,\n      },\n      {\n        key: EGameModes.Online,\n        value: CompassCalibrationIcon,\n      },\n    ],\n    timer: {\n      isOn: false,\n      tick: 0,\n    },\n  });\n\n  function onPlayerClick(row, col) {\n    const coords = { row, col };\n    switch (activeMode) {\n      case EGameModes.Koop:\n        switchTurnToAnotherUser({\n          turnState,\n          setTurnState,\n          setFieldState,\n          fieldState,\n          iconsDict,\n          coords,\n        });\n        break;\n      case EGameModes.Pc:\n        switchToPcTurn({\n          setFieldState,\n          setTurnState,\n          fieldState,\n          iconsDict,\n          coords,\n          turnState,\n          pc,\n        });\n        break;\n      case EGameModes.Online:\n        switchStepToRival(coords);\n    }\n  }\n\n  useEffect(() => {\n    let whiIsWin = null\n    let changeTurn: boolean = false\n    let opositTurn = oposite(turnState);\n    let compareResult = compareWin(fieldState, opositTurn, true);\n    const result = compareResult.showResult();\n    if (result === 'draw') {\n      changeTurn = true\n      setDraw(true);\n      setDialogOpen(true);\n    } else if (result) {\n      changeTurn = true\n      whiIsWin = Object.keys(countWin).find(\n        (isWinKey) => countWin[isWinKey].key == opositTurn\n      );\n      setDialogOpen(true);\n    }\n    if (!changeTurn) {\n      return;\n    }\n    let renders = 0\n    setCountWin((prev) => {\n      if (renders > 0) {\n        return prev\n      }\n      let next\n      const reverseDatas = Object.keys(prev)\n      next = prev[reverseDatas[0]].key\n      prev[reverseDatas[0]].key = prev[reverseDatas[1]].key\n      prev[reverseDatas[1]].key = next\n      \n      if (whiIsWin) {\n        prev[whiIsWin].countWin++\n      }\n      renders++\n      return {\n        ...prev\n      }\n    });\n  }, [turnState]);\n\n  useEffect(() => {\n    const activeMode = gameParams.gameWith.find((mode) => mode.checked);\n    setActiveMode(activeMode.key);\n  }, [gameParams.gameWith]);\n\n  useEffect(() => {\n    switch (activeMode) {\n      case EGameModes.Pc:\n        createPc({\n          dialogOpen,\n          activeMode,\n          startGame,\n          turnState,\n          setFieldState,\n          fieldState,\n          iconsDict,\n          setPc,\n          setCountWin\n        });\n        break;\n      case EGameModes.Online:\n        break;\n      case EGameModes.Koop:\n        break;\n    }\n  }, [startGame, dialogOpen]);\n\n  return (\n    <Box>\n      <Toolbar\n        setPause={setPause}\n        countWin={countWin}\n        iconsDict={iconsDict}\n        turnState={turnState}\n      />\n      {!(!startGame || pause) ? null : (\n        <GameMenu\n          menuTree={GameItems({\n            navigate,\n            setStartGame,\n            gameParams,\n            setGameParams,\n            pause,\n            setPause,\n          })}\n        />\n      )}\n      <Box sx={styles.field}>\n        {buildFieldByCoords(\n          fieldState,\n          (col) => (\n            <Box sx={styles.row}>{col}</Box>\n          ),\n          (row, colKey, rowKey) => {\n            return (\n              <Box\n                onClick={() => onPlayerClick(colKey, rowKey)}\n                sx={styles.col}\n              >\n                {row.value ? (\n                  <img width=\"90%\" height=\"90%\" src={row.value} alt={row.key} />\n                ) : (\n                  ''\n                )}\n              </Box>\n            );\n          }\n        )}\n      </Box>\n      <GameresultDialog\n        dialogOpen={dialogOpen}\n        setDialogOpen={setDialogOpen}\n        turnState={turnState}\n        setTurnState={setTurnState}\n        setFieldState={setFieldState}\n        setDraw={setDraw}\n        fild={fild}\n        iconsDict={iconsDict}\n        draw={draw}\n        countWin={countWin}\n      />\n    </Box>\n  );\n}\n\nexport default Game;\n","import { oposite } from '../../../utils/utils';\n\nfunction switchTurnToAnotherUser({\n  turnState,\n  setTurnState,\n  setFieldState,\n  fieldState,\n  iconsDict,\n  coords,\n}) {\n  const {col, row} = coords\n  if (!fieldState[row][col]?.key) {\n    let updateFieldState = {\n      ...fieldState,\n      [row]: { ...fieldState[row], [col]: iconsDict[turnState] },\n    };\n    let nextTurn = oposite(turnState);\n    setTurnState(nextTurn);\n    setFieldState(updateFieldState);\n  }\n}\n\nexport { switchTurnToAnotherUser };\n","import { EGameItems, EGameModes } from '../../../ts/enums';\nimport { oposite } from '../../../utils/utils';\nimport ComputerIcon from '@mui/icons-material/Computer';\nimport PC from '../pc';\n\nfunction switchToPcTurn({\n  setFieldState,\n  setTurnState,\n  fieldState,\n  iconsDict,\n  coords,\n  turnState,\n  pc,\n}) {\n  const {col, row} = coords\n  if (pc.think) {\n    return\n  }\n  if (!fieldState[row][col]?.key) {\n    let updateFieldState = {\n      ...fieldState,\n      [row]: { ...fieldState[row], [col]: iconsDict[turnState] },\n    };\n    setFieldState(updateFieldState);\n    setTurnState(oposite(turnState));\n    pc.stepTo(JSON.parse(JSON.stringify(updateFieldState))).then(\n      (afterPCPlay) => {\n        setFieldState({ ...afterPCPlay });\n        setTurnState(turnState);\n      }\n    );\n  }\n}\n\nfunction createPc({\n  dialogOpen,\n  activeMode,\n  startGame,\n  turnState,\n  setFieldState,\n  fieldState,\n  iconsDict,\n  setPc,\n  setCountWin\n}) {\n  if (startGame && activeMode === EGameModes.Pc && dialogOpen === false) {\n    const pc = new PC(oposite(turnState), fieldState, iconsDict);\n    setPc(pc);\n    setCountWin(prev => ({\n      ...prev,\n      rival: {...prev.rival, data: {username: 'PC', avatar: ComputerIcon}}\n    }))\n\n    const check = oposite(turnState);\n    if (check === EGameItems.X) {\n      pc.stepTo(JSON.parse(JSON.stringify(fieldState))).then((firstStep) =>\n        setFieldState(firstStep)\n      );\n    }\n  }\n}\n\nexport { switchToPcTurn, createPc };\n","function switchStepToRival(updateFieldState) {\n    console.log('rival steps');\n  }\n\n  export {\n    switchStepToRival\n  }","import { TField } from './types';\n\nexport function buildFieldByCoords(fieldMap, renderCol, renderRow) {\n  return Object.keys(fieldMap).map((colKey, colIdx, cols) => {\n    return renderCol(\n      Object.keys(fieldMap[colKey]).map((row, rowIdx) => {\n        return (\n          fieldMap[colKey][row],\n          renderRow(fieldMap[colKey][row], colKey, row, colIdx, cols)\n        );\n      }),\n      colKey,\n      colIdx,\n      cols,\n      Object.keys(fieldMap[colKey])\n    );\n  });\n}\n\nexport function forEachField(field, action) {\n  console.log('child');\n  Object.keys(field).forEach((col) => {\n    Object.keys(field[col]).forEach((row) => {\n      field[col][row] = action(col, row);\n    });\n  });\n  return field;\n}\n\nexport function runByAllFields(fields, dump) {\n  const result = (col, row) => {\n    dump(col, row)\n    return fields[col][row]\n  }\n  forEachField(fields, result)\n}\n\nexport function makeField(field: TField, pattern: any = {}): Record<string, object> {\n  let startLetter = 65;\n  let __data = {\n    chees: { cols: 8, rows: 8 },\n    tictactoe: { cols: 3, rows: 3 },\n  };\n  let coords = typeof field === 'string' ? __data[field] : field;\n\n  let fieldMap = {};\n\n  for (let i = 0; i < coords.cols; i++) {\n    fieldMap[String.fromCharCode(startLetter)] = new Array(coords.rows)\n      .fill('')\n      .reduce((cols, _, idx) => {\n        cols[idx] = {};\n        return cols;\n      }, {});\n    startLetter++;\n  }\n\n  return fieldMap;\n}\n\nexport function clearField(field) {\n  const clearValues = (item) => (item = {});\n\n  forEachField(field, clearValues);\n}\n","export enum EField {\n  TicTacToe = 'tictactoe',\n  Chees = 'chees',\n  SeaBattle = 'seabattle',\n}\n\nexport type TField =\n  | EField\n  | {\n      cols: number;\n      rows: number;\n    };\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"12\",\n  cy: \"17\",\n  r: \"4\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 10.07c1.95 0 3.72.79 5 2.07l5-5C19.44 4.59 15.9 3 12 3S4.56 4.59 2 7.15l5 5c1.28-1.28 3.05-2.08 5-2.08z\"\n}, \"1\")], 'CompassCalibration');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 18c1.1 0 1.99-.9 1.99-2L22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2H0v2h24v-2h-4zM4 6h16v10H4V6z\"\n}), 'Computer');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z\"\n}), 'Group');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexports.default = _default;"],"names":["onChange","props","onChangeValue","e","console","log","parsedValue","target","value","split","reduce","key","idx","label","variant","menuTree","useState","children","optionNode","setOptionNode","menuTreeWithIds","useMemo","forEachTreeNodes","node","parrentNode","onTreeItemPress","treeNode","action","sx","backdropFilter","width","height","background","position","gap","bottom","color","margin","flexDirection","alignItems","display","justifyContent","top","left","right","zIndex","backgroundColor","onClick","parrentId","id","replace","findTreeNodeById","nodePath","length","map","control","overflowY","overflowX","border","content","transformOrigin","transform","animation","component","primary","text","flexGrow","React","spacing","direction","mb","disabled","defaultValue","styleComponent","theme","reactCSS","default","icon","marginLeft","field","row","col","alignContent","game_count","EGameItems","EGameModes","EFieldParams","iconsDict","countWin","me","rival","useTheme","styles","style","src","Typography","oposite","X","O","compareWin","fieldState","turn","checkWin","vertical","horisontal","diagonalLeft","diagonalRight","checkHorisontal","checkVertical","startDiagonalLeft","startDiagonalRight","startDiagonalRightCol","isDraw","checkCount","forEachField","coords","String","fromCharCode","charCodeAt","Col","some","push","i","charCode","compareResults","isWin","Object","values","result","showResult","showCoordinates","reverseState","isResult","turnState","alt","setPause","ToolbarComponent","Box","Button","Menu","createSvgIcon","_jsx","d","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","ownerState","root","indeterminate","capitalize","_extends","vars","palette","secondary","disableRipple","activeChannel","mainChannel","hoverOpacity","alpha","active","main","checkboxClasses","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","checkedIcon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","size","className","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","type","fontSize","clsx","getListItemAvatarUtilityClass","ListItemAvatarRoot","alignItemsFlexStart","minWidth","flexShrink","marginTop","context","ListContext","gameParams","setGameParams","selectedVariant","gameWith","find","checked","selectedMode","setSelectedMode","onChangeMode","useEffect","param","updateWith","item","List","dense","Icon","ListItem","secondaryAction","edge","disablePadding","ListItemButton","ListItemText","time","setTime","timer","isOn","showTimer","setShowTimer","parseMiliseconds","match","groups","minutes","seconds","calc","prev","tick","Switch","Timer","GameItems","navigate","setStartGame","pause","virtual","SoundSettings","ERoutes","dialogOpen","setDialogOpen","setTurnState","setFieldState","setDraw","fild","draw","useNavigate","DialogControl","dialogActions","clearField","open","setOpen","title","PC","side","stepCount","winCenter","think","warnings","opositeSide","fieldCorners","this","calculateCorners","corners","points","keys","reverse","runByAllFields","checkCorner","filter","point","variants","that","filterSteps","empty","_","checkRow","checkCol","checkField","canStep","checkRival","checkPC","rivalSteps","pcSteps","dangers","checkFill","opportunities","onFirstVariant","render","onDefence","freeVariants","randomUnit","steps","checkState","config","friendly","undefined","step","checkRange","stepCol","stepRow","checkSteps","corner","horisontalConfig","configData","verticalConfig","range","unit","rangeUnit","rangeStep","sort","a","b","avalibleSteps","preventDanger","rangeSteps","elem","promise","Promise","resolve","setTimeout","onFirstStep","pcThink","Tic","Tac","makeField","EField","useContext","AuthContext","AuthUser","activeMode","setActiveMode","pc","setPc","startGame","data","username","avatar","setCountWin","Pc","ComputerIcon","Koop","GroupIcon","Online","CompassCalibrationIcon","onPlayerClick","updateFieldState","switchTurnToAnotherUser","stepTo","JSON","parse","stringify","then","afterPCPlay","switchToPcTurn","whiIsWin","changeTurn","opositTurn","isWinKey","renders","next","reverseDatas","mode","firstStep","createPc","GameMenu","buildFieldByCoords","colKey","rowKey","fieldMap","renderCol","renderRow","colIdx","cols","rowIdx","forEach","fields","dump","startLetter","chees","rows","tictactoe","Array","fill","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx","cx","cy","r"],"sourceRoot":""}