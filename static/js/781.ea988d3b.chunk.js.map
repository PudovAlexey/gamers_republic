{"version":3,"file":"static/js/781.ea988d3b.chunk.js","mappings":"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","sources":["components/reusable/Timer/Timer.tsx","games/checkers/elements/Figure.ts","games/checkers/elements/Queen.ts","../node_modules/@mui/material/esm/ButtonGroup/buttonGroupClasses.js","../node_modules/@mui/material/esm/ButtonGroup/ButtonGroup.js","games/checkers/gameMenu/items/settings/TimerSettings.tsx","games/checkers/Game.tsx","games/checkers/gameMenu/GameMenu.tsx","games/reusable/GameMenu.tsx","games/utils/fiels.ts","games/utils/types.ts"],"sourcesContent":["import { TextField } from '@mui/material';\n\nfunction Timer({ onChange, ...props }) {\n  function onChangeValue(e) {\n    console.log(e);\n    const value = e.target.value;\n    let parsedValue = value.split('').reduce((value, key, idx) => {\n      if (idx > 4) {\n        value = false;\n      } else {\n        value = idx === 2 && key !== ':' ? value + ':' + key : value + key;\n      }\n      return value;\n    }, '');\n    onChange(typeof parsedValue === 'string' ? parsedValue : props.value);\n  }\n  return (\n    <TextField\n      label=\"set timer\"\n      variant=\"filled\"\n      {...props}\n      onChange={(e) => onChangeValue(e)}\n    />\n  );\n}\n\nexport default Timer;\n","import Black from '../assets/black.png';\nimport Red from '../assets/red.png';\nimport { Color, Coords, FieldState, IFigure, Side, TNextCoords } from './types';\n\nclass Figure implements IFigure {\n  figures = {\n    Red,\n    Black,\n  };\n  lights = [];\n  coords: Coords;\n  color: Color;\n  side: Side;\n  fieldState: FieldState;\n  constructor(coords?, color?, side?, fieldState?) {\n    this.side = side;\n    this.coords = coords;\n    this.color = color;\n    this.fieldState = fieldState;\n  }\n\n  columnIntoNextStep(col, nextTo) {\n    const toCode = col.charCodeAt() + nextTo;\n    return String.fromCharCode(toCode);\n  }\n\n  get getColor() {\n    return this.color;\n  }\n\n  canEat(col, row) {}\n\n  canLight(col, row) {\n    return (\n      this.fieldState[col] &&\n      this.fieldState[col][row] &&\n      !this.fieldState[col][row]?.key\n    );\n  }\n\n  fromLeftTop(col, row): TNextCoords {\n    const nextCol = this.columnIntoNextStep(col, -this.side || +1);\n\n    return {\n      key: 'fromLeftTop',\n      value: this.fieldState[nextCol] && this.fieldState[nextCol][+row - 1],\n      coords: {\n        col: nextCol,\n        row: +row - 1,\n      },\n      oposite: 'fromRightBottom',\n    };\n  }\n\n  fromRightTop(col, row): TNextCoords {\n    const nextCol = this.columnIntoNextStep(col, -this.side || +1);\n\n    return {\n      key: 'fromRightTop',\n      value: this.fieldState[nextCol] && this.fieldState[nextCol][+row + 1],\n      coords: {\n        col: nextCol,\n        row: +row + 1,\n      },\n      oposite: 'fromLeftBottom',\n    };\n  }\n\n  fromRightBottom(col, row): TNextCoords {\n    const nextCol = this.columnIntoNextStep(col, +this.side || -1);\n\n    return {\n      key: 'fromRightBottom',\n      value: this.fieldState[nextCol] && this.fieldState[nextCol][+row + 1],\n      coords: {\n        col: nextCol,\n        row: +row + 1,\n      },\n      oposite: 'fromLeftTop',\n    };\n  }\n  fromLeftBottom(col, row): TNextCoords {\n    const nextCol = this.columnIntoNextStep(col, +this.side || -1);\n\n    return {\n      key: 'fromLeftBottom',\n      value: this.fieldState[nextCol] && this.fieldState[nextCol][+row - 1],\n      coords: {\n        col: nextCol,\n        row: +row - 1,\n      },\n      oposite: 'fromRightTop',\n    };\n  }\n\n  hasEat(col, row) {\n    let isEat = [\n      this.fromLeftTop(col, row),\n      this.fromRightTop(col, row),\n      this.fromRightBottom(col, row),\n      this.fromLeftBottom(col, row),\n    ];\n    const isMustEat = [];\n    const isEatVariants = isEat.filter(\n      (i) => i?.value?.key && i?.value?.key !== this.color,\n      this\n    );\n    isEatVariants.forEach((eatVariant) => {\n      let getNextStepByEat = this[eatVariant.key](\n        eatVariant.coords.col,\n        eatVariant.coords.row\n      );\n      // this.fieldState[getNextStepByEat.coords.col][getNextStepByEat.coords.row].li\n      if (\n        this.canLight(getNextStepByEat.coords.col, getNextStepByEat.coords.row)\n      ) {\n        isMustEat.push(getNextStepByEat);\n        this.fieldState[getNextStepByEat.coords.col][\n          getNextStepByEat.coords.row\n        ].light = 'red';\n        this.lights.push({\n          col: getNextStepByEat.coords.col,\n          row: getNextStepByEat.coords.row,\n          eat: eatVariant,\n        });\n      }\n    }, this);\n\n    return isMustEat;\n  }\n\n  forEachField(action) {\n    const that = this;\n    Object.keys(this.fieldState).forEach((colKey) => {\n      Object.keys(that.fieldState[colKey]).forEach((rowKey) => {\n        action(that.fieldState[colKey][rowKey], colKey, rowKey);\n      });\n    });\n  }\n\n  lightAvalibleFields(eatContinue) {\n    let { col, row } = this.coords;\n    const clearLights = (column) => delete column.light;\n    this.forEachField(clearLights);\n    const isMustEat = this.hasEat(col, row);\n    if (isMustEat.length) {\n      return this.fieldState;\n    }\n    if (eatContinue) return this.fieldState;\n    let canStep = [this.fromLeftTop(col, row), this.fromRightTop(col, row)];\n    canStep.forEach((step) => {\n      if (this.canLight(step.coords.col, step.coords.row)) {\n        this.fieldState[step.coords.col][step.coords.row].light = 'red';\n        this.lights.push({\n          col: step.coords.col,\n          row: step.coords.row,\n        });\n      }\n    }, this);\n    return this.fieldState;\n  }\n\n  stepTo(col, row, activeFigure) {\n    if (this.fieldState[col][row].key) {\n      return { changeChoice: true };\n    }\n    let isWasEat = false;\n    let isAvalibleField = this.lights.find(\n      (light) => light.col === col && +light.row === +row\n    );\n    let isNotStep = true;\n    if (isAvalibleField && this.fieldState[col][row].light) {\n      let vasDestroyByReason = null;\n      const isEatAportunaty = (_, col, row) => {\n        const isMustEat = [\n          this.fromLeftTop(col, row),\n          this.fromRightTop(col, row),\n          this.fromLeftBottom(col, row),\n          this.fromRightBottom(col, row),\n        ];\n        isMustEat.forEach((inAim) => {\n          const isOnEnd = this[inAim.oposite](col, row)?.value;\n          console.log(col, row);\n          if (\n            typeof inAim?.value?.key === 'string' &&\n            this.fieldState[col][row].key &&\n            inAim?.value?.key !== this.fieldState[col][row].key &&\n            JSON.stringify(this.coords) !==\n              JSON.stringify(this.fieldState[col][row].figure.coords) &&\n            isOnEnd\n          ) {\n            const { col: colAim, row: rowAim } = inAim.coords;\n            const isNotKey = !this[inAim.oposite](col, row)?.value?.key;\n            if (\n              this[inAim.oposite](colAim, rowAim).value &&\n              this[inAim.oposite](colAim, rowAim).value.key &&\n              this.fieldState[colAim][rowAim].key === this.color &&\n              isNotKey &&\n              !this.lights.some(\n                (light) =>\n                  JSON.stringify(light?.eat?.coords || {}) ===\n                  JSON.stringify({ col, row: +row })\n              ) &&\n              !vasDestroyByReason\n            ) {\n              this.fieldState[colAim][rowAim] = {};\n              vasDestroyByReason = { col, row };\n            }\n          }\n        }, this);\n      };\n      this.forEachField(isEatAportunaty);\n      let { col: oldCol, row: oldRow } = this.coords;\n      this.fieldState[oldCol][oldRow] = {};\n      let { key, value } = this.render();\n      this.fieldState[col][row] = {\n        figure: activeFigure,\n        key,\n        value,\n      };\n      const makeQueen =\n        !this.fieldState[this.columnIntoNextStep(col, -this.side)];\n      this.coords = {\n        row,\n        col,\n      };\n      if (makeQueen) {\n        this.fieldState[col][row].updateToQueen = true;\n      }\n      this.lights.forEach((light) => {\n        if (this.fieldState[light.col] && this.fieldState[light.col][light.row])\n          delete this.fieldState[light.col][light.row].light;\n        const eatTo =\n          light.eat &&\n          this[light.eat.key](light.eat.coords.col, light.eat.coords.row);\n        if (\n          light.eat &&\n          +eatTo.coords.row === +row &&\n          eatTo.coords.col === col\n        ) {\n          isWasEat = true;\n          this.fieldState[light.eat.coords.col][light.eat.coords.row] = {};\n        }\n      });\n      this.lights = [];\n      isNotStep = false;\n    }\n    return {\n      stepTo: this.fieldState,\n      coords: this.coords,\n      isNotStep,\n      isWasEat,\n    };\n  }\n\n  render() {\n    return {\n      key: this.color,\n      value: this.figures[this.color],\n    };\n  }\n}\n\nexport default Figure;\n","import Figure from './Figure';\nimport Red from '../assets/red_queen.png';\nimport Black from '../assets/black_queen.png';\nimport { TField } from '../../utils/types';\nimport { IFigure, TLights } from './types';\n\nclass Queen extends Figure implements IFigure {\n  figures = {\n    Red,\n    Black,\n  };\n\n  lights: TLights[] = [];\n\n  constructor(color, coords, fieldState) {\n    super();\n    this.coords = coords;\n    this.color = color;\n    this.fieldState = fieldState;\n  }\n\n  makeLights(col, row) {\n    let coords = [\n      this.fromLeftBottom(col, row),\n      this.fromLeftTop(col, row),\n      this.fromRightTop(col, row),\n      this.fromRightBottom(col, row),\n    ];\n    function handleToBorder(nextCoord, eatMark, end) {\n      if (nextCoord.value && !nextCoord.value.key)\n        this.fieldState[nextCoord.coords.col][nextCoord.coords.row].light =\n          'red';\n      let light: TLights = {\n        col: nextCoord.coords.col,\n        row: nextCoord.coords.row,\n      };\n      if (\n        nextCoord.value &&\n        nextCoord.value.key &&\n        nextCoord.value.key !== this.color &&\n        this[nextCoord.key](nextCoord.coords.col, nextCoord.coords.row).value &&\n        !this[nextCoord.key](nextCoord.coords.col, nextCoord.coords.row).value\n          .key\n      ) {\n        light.eat = nextCoord;\n        eatMark = true;\n      } else if (\n        nextCoord?.value?.key &&\n        this[nextCoord.key](nextCoord.coords.col, nextCoord.coords.row).value &&\n        this[nextCoord.key](nextCoord.coords.col, nextCoord.coords.row).value\n          .key\n      ) {\n        end = true;\n      }\n      this.lights.push(light);\n\n      if (\n        this[nextCoord.key](nextCoord.coords.col, nextCoord.coords.row).value\n      ) {\n        if (end) return;\n        if (eatMark) {\n          handleToBorder.call(\n            this,\n            this[nextCoord.key](nextCoord.coords.col, nextCoord.coords.row),\n            eatMark,\n            true\n          );\n          return;\n        }\n        handleToBorder.call(\n          this,\n          this[nextCoord.key](nextCoord.coords.col, nextCoord.coords.row),\n          eatMark\n        );\n      }\n    }\n    coords.map((nextCoord) => {\n      let eatMark = false;\n      const isKey =\n        this.fieldState[nextCoord.coords.col] &&\n        this.fieldState[nextCoord.coords.col][nextCoord.coords.row]?.key;\n      const isHasField =\n        this.fieldState[nextCoord.coords.col] &&\n        this.fieldState[nextCoord.coords.col][nextCoord.coords.row];\n      if (isHasField && !isKey) {\n        this.fieldState[nextCoord.coords.col][nextCoord.coords.row].light =\n          'red';\n      }\n      const light: TLights = {\n        col: nextCoord.coords.col,\n        row: nextCoord.coords.row,\n      };\n      if (\n        nextCoord.value &&\n        nextCoord.value.key &&\n        nextCoord.value.key !== this.color &&\n        this[nextCoord.key](nextCoord.coords.col, nextCoord.coords.row).value &&\n        !this[nextCoord.key](nextCoord.coords.col, nextCoord.coords.row).value\n          .key\n      ) {\n        light.eat = nextCoord;\n        eatMark = true;\n      }\n      this.lights.push(light);\n      if (eatMark) {\n        handleToBorder.call(\n          this,\n          this[nextCoord.key](nextCoord.coords.col, nextCoord.coords.row),\n          eatMark,\n          true\n        );\n        return;\n      }\n      handleToBorder.call(\n        this,\n        this[nextCoord.key](nextCoord.coords.col, nextCoord.coords.row),\n        eatMark\n      );\n    }, this);\n  }\n\n  lightAvalibleFields(eatContinue: any) {\n    let { col, row } = this.coords;\n    const clearLights = (column) => delete column.light;\n    this.forEachField(clearLights);\n    if (eatContinue) {\n      this.hasEat(col, row);\n\n      return this.fieldState;\n    }\n    this.makeLights(col, row);\n    const canEat = this.lights.filter((light) => !!light.eat);\n    if (canEat.length) {\n      const clearNotEatLights = (column, col, row) => {\n        const isAfterEatCoords = canEat.find((eat) => {\n          return (\n            JSON.stringify(\n              this[eat.eat.key](eat.eat.coords.col, eat.eat.coords.row).coords\n            ) === JSON.stringify({ col, row: +row })\n          );\n        });\n        if (!isAfterEatCoords) {\n          delete column.light;\n        }\n      };\n      this.forEachField(clearNotEatLights);\n    }\n    return this.fieldState;\n  }\n  render() {\n    return {\n      key: this.color,\n      value: this.figures[this.color],\n    };\n  }\n}\n\nexport default Queen;\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getButtonGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiButtonGroup', slot);\n}\nconst buttonGroupClasses = generateUtilityClasses('MuiButtonGroup', ['root', 'contained', 'outlined', 'text', 'disableElevation', 'disabled', 'fullWidth', 'vertical', 'grouped', 'groupedHorizontal', 'groupedVertical', 'groupedText', 'groupedTextHorizontal', 'groupedTextVertical', 'groupedTextPrimary', 'groupedTextSecondary', 'groupedOutlined', 'groupedOutlinedHorizontal', 'groupedOutlinedVertical', 'groupedOutlinedPrimary', 'groupedOutlinedSecondary', 'groupedContained', 'groupedContainedHorizontal', 'groupedContainedVertical', 'groupedContainedPrimary', 'groupedContainedSecondary']);\nexport default buttonGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"disableRipple\", \"fullWidth\", \"orientation\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport buttonGroupClasses, { getButtonGroupUtilityClass } from './buttonGroupClasses';\nimport ButtonGroupContext from './ButtonGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [{\n    [`& .${buttonGroupClasses.grouped}`]: styles.grouped\n  }, {\n    [`& .${buttonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.orientation)}`]\n  }, {\n    [`& .${buttonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.variant)}`]\n  }, {\n    [`& .${buttonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.variant)}${capitalize(ownerState.orientation)}`]\n  }, {\n    [`& .${buttonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.variant)}${capitalize(ownerState.color)}`]\n  }, styles.root, styles[ownerState.variant], ownerState.disableElevation === true && styles.disableElevation, ownerState.fullWidth && styles.fullWidth, ownerState.orientation === 'vertical' && styles.vertical];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    disabled,\n    disableElevation,\n    fullWidth,\n    orientation,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, orientation === 'vertical' && 'vertical', fullWidth && 'fullWidth', disableElevation && 'disableElevation'],\n    grouped: ['grouped', `grouped${capitalize(orientation)}`, `grouped${capitalize(variant)}`, `grouped${capitalize(variant)}${capitalize(orientation)}`, `grouped${capitalize(variant)}${capitalize(color)}`, disabled && 'disabled']\n  };\n  return composeClasses(slots, getButtonGroupUtilityClass, classes);\n};\nconst ButtonGroupRoot = styled('div', {\n  name: 'MuiButtonGroup',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  borderRadius: (theme.vars || theme).shape.borderRadius\n}, ownerState.variant === 'contained' && {\n  boxShadow: (theme.vars || theme).shadows[2]\n}, ownerState.disableElevation && {\n  boxShadow: 'none'\n}, ownerState.fullWidth && {\n  width: '100%'\n}, ownerState.orientation === 'vertical' && {\n  flexDirection: 'column'\n}, {\n  [`& .${buttonGroupClasses.grouped}`]: _extends({\n    minWidth: 40,\n    '&:not(:first-of-type)': _extends({}, ownerState.orientation === 'horizontal' && {\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0\n    }, ownerState.orientation === 'vertical' && {\n      borderTopRightRadius: 0,\n      borderTopLeftRadius: 0\n    }, ownerState.variant === 'outlined' && ownerState.orientation === 'horizontal' && {\n      marginLeft: -1\n    }, ownerState.variant === 'outlined' && ownerState.orientation === 'vertical' && {\n      marginTop: -1\n    }),\n    '&:not(:last-of-type)': _extends({}, ownerState.orientation === 'horizontal' && {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0\n    }, ownerState.orientation === 'vertical' && {\n      borderBottomRightRadius: 0,\n      borderBottomLeftRadius: 0\n    }, ownerState.variant === 'text' && ownerState.orientation === 'horizontal' && {\n      borderRight: theme.vars ? `1px solid rgba(${theme.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'}`\n    }, ownerState.variant === 'text' && ownerState.orientation === 'vertical' && {\n      borderBottom: theme.vars ? `1px solid rgba(${theme.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'}`\n    }, ownerState.variant === 'text' && ownerState.color !== 'inherit' && {\n      borderColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.5)` : alpha(theme.palette[ownerState.color].main, 0.5)\n    }, ownerState.variant === 'outlined' && ownerState.orientation === 'horizontal' && {\n      borderRightColor: 'transparent'\n    }, ownerState.variant === 'outlined' && ownerState.orientation === 'vertical' && {\n      borderBottomColor: 'transparent'\n    }, ownerState.variant === 'contained' && ownerState.orientation === 'horizontal' && {\n      borderRight: `1px solid ${(theme.vars || theme).palette.grey[400]}`,\n      [`&.${buttonGroupClasses.disabled}`]: {\n        borderRight: `1px solid ${(theme.vars || theme).palette.action.disabled}`\n      }\n    }, ownerState.variant === 'contained' && ownerState.orientation === 'vertical' && {\n      borderBottom: `1px solid ${(theme.vars || theme).palette.grey[400]}`,\n      [`&.${buttonGroupClasses.disabled}`]: {\n        borderBottom: `1px solid ${(theme.vars || theme).palette.action.disabled}`\n      }\n    }, ownerState.variant === 'contained' && ownerState.color !== 'inherit' && {\n      borderColor: (theme.vars || theme).palette[ownerState.color].dark\n    }, {\n      '&:hover': _extends({}, ownerState.variant === 'outlined' && ownerState.orientation === 'horizontal' && {\n        borderRightColor: 'currentColor'\n      }, ownerState.variant === 'outlined' && ownerState.orientation === 'vertical' && {\n        borderBottomColor: 'currentColor'\n      })\n    }),\n    '&:hover': _extends({}, ownerState.variant === 'contained' && {\n      boxShadow: 'none'\n    })\n  }, ownerState.variant === 'contained' && {\n    boxShadow: 'none'\n  })\n}));\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(function ButtonGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiButtonGroup'\n  });\n  const {\n      children,\n      className,\n      color = 'primary',\n      component = 'div',\n      disabled = false,\n      disableElevation = false,\n      disableFocusRipple = false,\n      disableRipple = false,\n      fullWidth = false,\n      orientation = 'horizontal',\n      size = 'medium',\n      variant = 'outlined'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    disableElevation,\n    disableFocusRipple,\n    disableRipple,\n    fullWidth,\n    orientation,\n    size,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const context = React.useMemo(() => ({\n    className: classes.grouped,\n    color,\n    disabled,\n    disableElevation,\n    disableFocusRipple,\n    disableRipple,\n    fullWidth,\n    size,\n    variant\n  }), [color, disabled, disableElevation, disableFocusRipple, disableRipple, fullWidth, size, variant, classes.grouped]);\n  return /*#__PURE__*/_jsx(ButtonGroupRoot, _extends({\n    as: component,\n    role: \"group\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(ButtonGroupContext.Provider, {\n      value: context,\n      children: children\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, no elevation is used.\n   * @default false\n   */\n  disableElevation: PropTypes.bool,\n  /**\n   * If `true`, the button keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the button ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If `true`, the buttons will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default ButtonGroup;","import React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  ButtonGroup,\n  Switch,\n  Typography,\n  Box,\n  Input,\n} from '@mui/material';\nimport Timer from '../../../../../components/reusable/Timer/Timer';\nfunction TimerSettings({ gameParams, setGameParams }) {\n  const [time, setTime] = useState('00:00');\n  const [showTimer, setShowTimer] = useState(gameParams.timer.isOn);\n\n  useEffect(() => {\n    let parseMiliseconds = time.match(/(?<minutes>^\\d+):(?<seconds>\\d+)/);\n    if (\n      !(parseMiliseconds?.groups?.minutes && parseMiliseconds?.groups?.seconds)\n    ) {\n      return;\n    }\n    const calc =\n      +parseMiliseconds.groups.minutes * 60000 +\n      +parseMiliseconds.groups.seconds * 1000;\n    setGameParams((prev) => ({\n      ...prev,\n      timer: { ...prev.timer, tick: calc },\n    }));\n  }, [time]);\n\n  useEffect(() => {\n    setGameParams((prev) => ({\n      ...prev,\n      timer: { ...prev.timer, isOn: showTimer },\n    }));\n  }, [showTimer]);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n      }}\n    >\n      <Box>\n        <Typography>Timer On:</Typography>\n        <Switch\n          onChange={() => setShowTimer((prev) => !prev)}\n          checked={showTimer}\n        />\n      </Box>\n      <Box>\n        {showTimer ? (\n          <Box>\n            <Timer value={time} onChange={(e) => setTime(e)} />\n          </Box>\n        ) : null}\n      </Box>\n    </Box>\n  );\n}\n\nexport default TimerSettings;\n","import { useEffect, useState } from 'react';\nimport { buildFieldByCoords, forEachField, makeField } from '../utils/fiels';\nimport { EField } from '../utils/types';\nimport Black from './assets/black.png';\nimport Red from './assets/red.png';\nimport { Box, Typography } from '@mui/material';\nimport Figure from './elements/Figure';\nimport Queen from './elements/Queen';\nimport { QueenTests } from './tests/Queen';\nimport ToolbarComponent from '../../components/reusable/ToolbarComponent/ToolbarComponent';\nimport GameMenu from '../reusable/GameMenu';\nimport { gameMenu } from './gameMenu/GameMenu';\nimport { useNavigate } from 'react-router-dom';\nimport { parseTime } from '../../utils/timer/timer';\nimport { FieldTests } from './tests/Figure';\n\nlet field = makeField(EField.Chees);\n\nfunction onFillBoard(field, gameParams) {\n  let { side } = gameParams;\n  return forEachField(field, (col, row) => {\n    let playerColor = null;\n    let sSide;\n    if (col.charCodeAt() <= 67) {\n      playerColor = side.top;\n      sSide = -1;\n    } else if (col.charCodeAt() >= 70) {\n      playerColor = side.bottom;\n      sSide = 1;\n    }\n\n    let rowAdd = col.charCodeAt() % 2 === 0 ? row % 2 === 0 : row % 2 !== 0;\n    if (rowAdd && playerColor) {\n      let figure = new Figure({ col, row }, playerColor, sSide, field);\n      return { ...figure.render(), figure };\n    } else {\n      return {};\n    }\n  });\n}\n\nfunction Game() {\n  let [fieldState, setFieldState] = useState(field);\n  let [startGame, setStartGame] = useState(false);\n  let [figuresRemaining, setFiguresRemaining] = useState({\n    Red: { key: Red, count: 0 },\n    Black: { key: Black, count: 0 },\n  });\n  let [turn, setTurn] = useState('Red');\n  let [activeFigure, setActiveFigure] = useState(null);\n  let [time, setTime] = useState(0);\n  let [gameParams, setGameParams] = useState({\n    side: {\n      top: 'Black',\n      bottom: 'Red',\n    },\n    firstStep: 'Black',\n    timer: {\n      isOn: false,\n      tick: 0,\n    },\n  });\n  useEffect(() => {\n    if (!startGame) setTime(gameParams.timer.tick);\n  }, [gameParams.timer.tick]);\n  useEffect(() => {\n    setTurn(gameParams.firstStep);\n    let fillBoard = onFillBoard(field, gameParams);\n    // let figureTests = FieldTests(field);\n    setFieldState({ ...fillBoard });\n  }, [gameParams.side, gameParams.firstStep]);\n\n  useEffect(() => {\n    if (gameParams.timer.tick === 0) {\n      setTurn((prev) => (prev === 'Black' ? 'Red' : 'Black'));\n      setGameParams((prev) => ({\n        ...prev,\n        timer: { ...prev.timer, tick: time },\n      }));\n    }\n  }, [gameParams.timer.tick]);\n  useEffect(() => {\n    setGameParams((prev) => ({\n      ...prev,\n      timer: { ...prev.timer, tick: time },\n    }));\n  }, [turn]);\n\n  const navigate = useNavigate();\n  const menuItems = gameMenu({\n    setStartGame,\n    navigate,\n    gameParams,\n    setGameParams,\n  });\n\n  useEffect(() => {\n    const isWin = Object.values(figuresRemaining).find(\n      (figure) => figure.count === 12\n    );\n    if (isWin) {\n      console.log(`${isWin.key} was win`);\n    }\n  }, [figuresRemaining]);\n\n  useEffect(() => {\n    if (!(startGame && gameParams.timer.isOn)) return;\n    let startTimer = setInterval(() => {\n      setGameParams((previous) => {\n        if (previous.timer.tick < 0) {\n          setTurn((prev) => (prev === 'Black' ? 'Red' : 'Black'));\n          return previous;\n        }\n        return {\n          ...previous,\n          timer: { ...previous.timer, tick: previous.timer.tick - 1000 },\n        };\n      });\n    }, 1000);\n    return () => {\n      clearInterval(startTimer);\n    };\n  }, [turn, startGame]);\n\n  function onPlayerClick(figure, col, row, eatContinue) {\n    if (figure && fieldState[col][row].key) {\n      const isPlayerCanGo = turn === figure.getColor;\n      setActiveFigure(figure);\n      if (!isPlayerCanGo) return;\n      let avalibleState = figure.lightAvalibleFields(eatContinue);\n      setFieldState({ ...avalibleState });\n    }\n  }\n\n  function onFigureGo(col, row) {\n    if (activeFigure && !fieldState[col][row].key) {\n      let { stepTo, isWasEat, changeChoice, coords, isNotStep } =\n        activeFigure.stepTo(col, row, activeFigure);\n      if (changeChoice || isNotStep) return;\n      if (stepTo[coords.col][coords.row].updateToQueen) {\n        let toQueen = stepTo[coords.col][coords.row].figure;\n        delete stepTo[coords.col][coords.row].updateToQueen;\n        const queen = new Queen(\n          toQueen.color,\n          toQueen.coords,\n          toQueen.fieldState\n        );\n        stepTo[coords.col][coords.row] = queen.render();\n        stepTo[coords.col][coords.row].figure = queen;\n      }\n      if (typeof isWasEat === 'boolean' && !isWasEat) {\n        let avalibleTurns = turn === 'Red' ? 'Black' : 'Red';\n        setFieldState(stepTo);\n        setTurn(avalibleTurns);\n      } else {\n        setFiguresRemaining((prev) => ({\n          ...prev,\n          [activeFigure.color]: {\n            ...prev[activeFigure.color],\n            count: prev[activeFigure.color].count++,\n          },\n        }));\n        onPlayerClick(\n          stepTo[coords.col][coords.row].figure,\n          coords.col,\n          coords.row,\n          true\n        );\n        if (\n          stepTo[coords.col][coords.row].figure.lights &&\n          !stepTo[coords.col][coords.row].figure.lights.length\n        ) {\n          let avalibleTurns = turn === 'Red' ? 'Black' : 'Red';\n          setTurn(avalibleTurns);\n        }\n        return;\n      }\n      setActiveFigure(null);\n    }\n  }\n\n  const timer = parseTime({\n    duration: gameParams.timer.tick,\n    formatter: ({ seconds, minutes }) => `${minutes}: ${seconds % 60}`,\n  });\n\n  return (\n    <Box>\n      <ToolbarComponent justifyContent=\"right\" width=\"30%\">\n        {gameParams.timer.isOn ? (\n          <Box>\n            <Typography>{timer}</Typography>\n          </Box>\n        ) : null}\n        <Box\n          sx={{\n            display: 'flex',\n            gap: '10px',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Typography>{figuresRemaining['Red'].count}</Typography>\n          <img\n            height=\"30px\"\n            width=\"30px\"\n            src={figuresRemaining['Red'].key}\n            alt=\"Red\"\n          />\n          :<Typography>{figuresRemaining['Black'].count}</Typography>\n          <img\n            height=\"30px\"\n            width=\"30px\"\n            src={figuresRemaining['Black'].key}\n            alt=\"Black\"\n          />\n        </Box>\n        <Box\n          sx={{\n            display: 'flex',\n            gap: '10px',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Typography>Now turn is:</Typography>\n          <img\n            height=\"30px\"\n            width=\"30px\"\n            src={figuresRemaining[turn].key}\n            alt={turn}\n          />\n        </Box>\n      </ToolbarComponent>\n      {!startGame ? <GameMenu menuTree={menuItems} /> : null}\n      {buildFieldByCoords(\n        fieldState,\n        (col, key, colIdx, cols, row) => (\n          <>\n            <Box\n              key={row}\n              sx={{\n                display: 'flex',\n                justifyContent: 'center',\n              }}\n            >\n              {key}\n              {col}\n            </Box>\n            <Box\n              key={`${colIdx}_${row}`}\n              sx={{\n                display: 'flex',\n                justifyContent: 'center',\n              }}\n            >\n              {colIdx === cols.length - 1 &&\n                row.map((i) => (\n                  <Box\n                    sx={{\n                      width: '60px',\n                      alignContent: 'center',\n                      background: 'white',\n                      display: 'flex',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                    }}\n                  >\n                    {i}\n                  </Box>\n                ))}\n            </Box>\n          </>\n        ),\n        (row, colKey, rowKey, colIdx, cols) => {\n          let isBlack =\n            colKey.charCodeAt() % 2 === 0 ? rowKey % 2 === 0 : rowKey % 2 !== 0;\n          let coloredBoard = isBlack ? 'black' : '';\n          return (\n            <Box\n              onClick={() => onFigureGo(colKey, rowKey)}\n              key={`row_${rowKey}_${colIdx}`}\n              sx={{\n                backgroundColor: row.light\n                  ? `${row.light} !important`\n                  : `${coloredBoard} !important`,\n                border: '2px solid black',\n                width: '60px',\n                height: '60px',\n                alignContent: 'center',\n                background: 'white',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              {row.key ? (\n                <img\n                  onClick={() =>\n                    onPlayerClick(row.figure, colKey, rowKey, false)\n                  }\n                  width={'50px'}\n                  height={'50px'}\n                  src={row.value}\n                  alt={row.key}\n                />\n              ) : null}\n              {/* {row.key} */}\n            </Box>\n          );\n        }\n      )}\n    </Box>\n  );\n}\n\nexport default Game;\n","import React, { useState } from 'react';\nimport {\n  Button,\n  ButtonGroup,\n  Switch,\n  Typography,\n  Box,\n  Input,\n} from '@mui/material';\nimport { parseTime } from '../../../utils/timer/timer';\nimport Timer from '../../../components/reusable/Timer/Timer';\nimport MenuTimer from './items/settings/TimerSettings';\n\nexport function gameMenu({\n  setStartGame,\n  navigate,\n  gameParams,\n  setGameParams,\n}) {\n  function SideSelect({ action }) {\n    return (\n      <ButtonGroup>\n        <Button variant=\"contained\" onClick={() => action('Black')}>\n          Black\n        </Button>\n        <Button variant=\"contained\" onClick={() => action('Red')}>\n          Red\n        </Button>\n      </ButtonGroup>\n    );\n  }\n\n  function onSetSide(e) {\n    setGameParams((params) => ({\n      ...params,\n      side: {\n        top: e,\n        bottom: e === 'Black' ? 'Red' : 'Black',\n      },\n    }));\n  }\n\n  function onSetFirstStep(e) {\n    console.log(e);\n    setGameParams((params) => ({\n      ...params,\n      firstStep: e,\n    }));\n  }\n  return {\n    node: { virtual: true },\n    children: [\n      {\n        node: {\n          text: 'Start Game',\n          action: function () {\n            setStartGame((prev) => !prev);\n          },\n        },\n      },\n      {\n        node: { text: 'Options' },\n        children: [\n          {\n            node: {\n              text: 'Choose Top Side',\n              control: <SideSelect action={onSetSide} />,\n            },\n          },\n          {\n            node: {\n              text: 'Who first Step',\n              control: <SideSelect action={onSetFirstStep} />,\n            },\n          },\n          {\n            node: {\n              text: 'Timer',\n              control: (\n                <MenuTimer\n                  setGameParams={setGameParams}\n                  gameParams={gameParams}\n                />\n              ),\n            },\n          },\n        ],\n      },\n      {\n        node: {\n          text: 'Out',\n          action: function () {\n            navigate('/games');\n          },\n        },\n        children: '',\n      },\n    ],\n  };\n}\n","import React, { useMemo } from 'react';\nimport { Box } from '@mui/system';\nimport { useState } from 'react';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport {\n  List,\n  ListItemButton,\n  ListItemText,\n  Button,\n  Typography,\n  ListItem,\n} from '@mui/material';\nimport {\n  findTreeNodeById,\n  forEachTreeNodes,\n} from '../../utils/treeWalker/treeWalker';\n\nfunction GameMenu({ menuTree }) {\n  const [optionNode, setOptionNode] = useState(menuTree.children);\n  const menuTreeWithIds = useMemo(() => {\n    let makeTreenodesIds = (node, parrentNode) => {};\n    return forEachTreeNodes(menuTree, makeTreenodesIds);\n  }, [optionNode]);\n\n  function onTreeItemPress(treeNode) {\n    if (treeNode.children) {\n      setOptionNode(treeNode.children);\n    } else if (treeNode.node.action) {\n      console.log('action');\n      treeNode.node.action();\n    }\n  }\n\n  function onNavBack() {\n    const parrentId = optionNode[0].node.id.replace(/-\\d+-\\d+$/, '');\n    const parrentNode = findTreeNodeById({\n      treeNode: menuTreeWithIds,\n      id: parrentId,\n      nodePath: 'node/id',\n    });\n    if (\n      parrentNode &&\n      parrentNode.children.length &&\n      parrentId !== optionNode[0]\n    ) {\n      setOptionNode(parrentNode.children);\n    }\n  }\n  return (\n    <Box>\n      <List\n        sx={{\n          backdropFilter: 'blur(5px)',\n          width: '100%',\n          height: '150%',\n          background: 'rgba(0, 0, 0, .5)',\n          position: 'absolute',\n          gap: \"30px\",\n          bottom: \"100px\",\n\n          color: 'white',\n          margin: 'auto auto',\n          flexDirection: 'column',\n          alignItems: 'center',\n          display: 'flex',\n          justifyContent: 'center',\n          top: 0,\n          left: 0,\n          right: 0,\n        }}\n      >\n        <Button\n          variant=\"contained\"\n          sx={{\n            zIndex: 2000,\n            position: 'fixed',\n            left: \"4%\",\n            top: '28%',\n            backgroundColor: \"#ff4655\",\n            width: \"150px\",\n            height: \"66px\"\n          }}\n          onClick={onNavBack}\n          >\n          <ArrowBackIosIcon/>\n        </Button>\n        {optionNode.map((treeNode) => (\n          treeNode.node.control ? <ListItem\n            sx={{\n              display: \"flex\",\n              flexDirection: 'column',\n              background: \"transparent\",\n              // border: \"2px solid #F8F8F8\",\n              width: \"90%\",\n              height: \"max-content\",\n              overflowY: \"hidden\",\n              overflowX: \"hidden\",\n              border: \"none\",\n              position: \"relative\",\n              \"&:after\": {\n                content: '\"\"',\n                position: 'absolute',\n                width: '1158%',\n                height: '1000%',\n                top: '20px; right: -500%',\n                background: '#F8F8F8',\n                color: \"\",\n                transformOrigin: '48.3% 0',\n                transform: 'rotate(-41deg)',\n                zIndex: -1,\n              },\n              \"&:hover\": {\n                animation: \"gameMenu 2s\",\n              }\n            }}\n            key={treeNode.node.id}\n            component=\"button\"\n            onClick={() => onTreeItemPress(treeNode)}\n          >\n            <ListItemText\n              primary={\n                <Typography variant=\"h4\">{treeNode.node.text}</Typography>\n              }\n            />\n            {treeNode.node.control}\n          </ListItem> :\n          <ListItemButton\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            flexGrow: '0',\n          }}\n          key={treeNode.node.id}\n          component=\"button\"\n          onClick={() => onTreeItemPress(treeNode)}\n        >\n          <ListItemText\n            primary={\n              <Typography variant=\"h4\">{treeNode.node.text}</Typography>\n            }\n          />\n          <Box>{treeNode.node.control}</Box>\n        </ListItemButton>\n        ))}\n      </List>\n    </Box>\n  );\n}\n\nexport default GameMenu;\n","import { TField } from './types';\n\nexport function buildFieldByCoords(fieldMap, renderCol, renderRow) {\n  return Object.keys(fieldMap).map((colKey, colIdx, cols) => {\n    return renderCol(\n      Object.keys(fieldMap[colKey]).map((row, rowIdx) => {\n        return (\n          fieldMap[colKey][row],\n          renderRow(fieldMap[colKey][row], colKey, row, colIdx, cols)\n        );\n      }),\n      colKey,\n      colIdx,\n      cols,\n      Object.keys(fieldMap[colKey])\n    );\n  });\n}\n\nexport function forEachField(field, action) {\n  console.log('child');\n  Object.keys(field).forEach((col) => {\n    Object.keys(field[col]).forEach((row) => {\n      field[col][row] = action(col, row);\n    });\n  });\n  return field;\n}\n\nexport function runByAllFields(fields, dump) {\n  const result = (col, row) => {\n    dump(col, row)\n    return fields[col][row]\n  }\n  forEachField(fields, result)\n}\n\nexport function makeField(field: TField, pattern: any = {}): Record<string, object> {\n  let startLetter = 65;\n  let __data = {\n    chees: { cols: 8, rows: 8 },\n    tictactoe: { cols: 3, rows: 3 },\n  };\n  let coords = typeof field === 'string' ? __data[field] : field;\n\n  let fieldMap = {};\n\n  for (let i = 0; i < coords.cols; i++) {\n    fieldMap[String.fromCharCode(startLetter)] = new Array(coords.rows)\n      .fill('')\n      .reduce((cols, _, idx) => {\n        cols[idx] = {};\n        return cols;\n      }, {});\n    startLetter++;\n  }\n\n  return fieldMap;\n}\n\nexport function clearField(field) {\n  const clearValues = (item) => (item = {});\n\n  forEachField(field, clearValues);\n}\n","export enum EField {\n  TicTacToe = 'tictactoe',\n  Chees = 'chees',\n  SeaBattle = 'seabattle',\n}\n\nexport type TField =\n  | EField\n  | {\n      cols: number;\n      rows: number;\n    };\n"],"names":["onChange","props","onChangeValue","e","console","log","parsedValue","target","value","split","reduce","key","idx","label","variant","coords","color","side","fieldState","figures","Red","Black","lights","this","col","nextTo","toCode","charCodeAt","String","fromCharCode","row","nextCol","columnIntoNextStep","oposite","isEat","fromLeftTop","fromRightTop","fromRightBottom","fromLeftBottom","isMustEat","filter","i","forEach","eatVariant","getNextStepByEat","canLight","push","light","eat","action","that","Object","keys","colKey","rowKey","eatContinue","forEachField","column","hasEat","length","step","activeFigure","changeChoice","isWasEat","isNotStep","find","vasDestroyByReason","_","inAim","isOnEnd","JSON","stringify","figure","colAim","rowAim","isNotKey","some","oldCol","oldRow","render","makeQueen","updateToQueen","eatTo","stepTo","handleToBorder","nextCoord","eatMark","end","call","map","isKey","makeLights","canEat","Figure","getButtonGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ButtonGroupRoot","styled","name","overridesResolver","styles","ownerState","buttonGroupClasses","grouped","capitalize","orientation","root","disableElevation","fullWidth","vertical","theme","_extends","display","borderRadius","vars","shape","boxShadow","shadows","width","flexDirection","minWidth","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","marginLeft","marginTop","borderBottomRightRadius","borderRight","palette","common","onBackgroundChannel","mode","borderBottom","borderColor","mainChannel","alpha","main","borderRightColor","borderBottomColor","grey","disabled","dark","React","inProps","ref","useThemeProps","children","className","component","disableFocusRipple","disableRipple","size","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","context","_jsx","as","role","clsx","ButtonGroupContext","gameParams","setGameParams","useState","time","setTime","timer","isOn","showTimer","setShowTimer","useEffect","parseMiliseconds","match","groups","minutes","seconds","calc","prev","tick","Box","sx","justifyContent","alignItems","Typography","Switch","checked","Timer","field","makeField","EField","setFieldState","startGame","setStartGame","count","figuresRemaining","setFiguresRemaining","turn","setTurn","setActiveFigure","top","bottom","firstStep","fillBoard","sSide","playerColor","onFillBoard","menuItems","navigate","SideSelect","Button","onClick","node","virtual","text","control","params","gameMenu","useNavigate","onPlayerClick","isPlayerCanGo","getColor","avalibleState","lightAvalibleFields","isWin","values","startTimer","setInterval","previous","clearInterval","parseTime","duration","formatter","ToolbarComponent","gap","height","src","alt","GameMenu","menuTree","buildFieldByCoords","colIdx","cols","alignContent","background","coloredBoard","toQueen","queen","Queen","avalibleTurns","onFigureGo","backgroundColor","border","optionNode","setOptionNode","menuTreeWithIds","useMemo","forEachTreeNodes","parrentNode","onTreeItemPress","treeNode","backdropFilter","position","margin","left","right","zIndex","parrentId","id","replace","findTreeNodeById","nodePath","overflowY","overflowX","content","transformOrigin","transform","animation","primary","flexGrow","fieldMap","renderCol","renderRow","rowIdx","runByAllFields","fields","dump","startLetter","__data","chees","rows","tictactoe","Array","fill","clearField","item"],"sourceRoot":""}